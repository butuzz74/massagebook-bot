import { Telegraf, Markup } from "telegraf";
import { Message } from "telegraf/typings/core/types/typegram";
import { config } from "./config";
import Booking from "./models/Booking";
import { connectDb } from "./db";
import { formatDate } from "./utils/formatDate";

const bot = new Telegraf(config.BOT_TOKEN);

bot.start(async (ctx) => {
    await ctx.reply(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        Markup.inlineKeyboard([
            [
                Markup.button.webApp(
                    "üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
                    "https://massagebook-web.vercel.app"
                ),
            ],
            [Markup.button.callback("üìã –ú–æ–∏ –∑–∞–ø–∏—Å–∏", "my_bookings")],
        ])
    );
});

bot.action("my_bookings", async (ctx) => {
    await ctx.answerCbQuery();

    const telegramId = ctx.from?.id;
    if (!telegramId) return ctx.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –í–∞—à telegramId");

    await connectDb();
    const bookings = await Booking.find({ telegramId });

    if (bookings.length === 0)
        return ctx.reply("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π.");

    const currentDate = formatDate(new Date());

    const text = bookings.map((elem, index) => {
        if (
            elem.date &&
            typeof elem.date === "string" &&
            elem.date >= currentDate
        ) {
            return `${index + 1}. üíÜ‚Äç‚ôÇÔ∏è ${elem.massage}\n   üìÖ ${elem.date} ‚è∞ ${
                elem.time
            }`;
        }
    });
    await ctx.reply(`–í–∞—à–∏ –∑–∞–ø–∏—Å–∏:\n\n${text}`);
});

bot.on("message", async (ctx) => {
    const message = ctx.message as Message.WebAppDataMessage;

    if (message.web_app_data && message.web_app_data.data) {
        try {
            const data = JSON.parse(message.web_app_data.data);
            await ctx.reply(
                `${data.name}! –°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –≤—ã–±–æ—Ä!\n–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞: ${data.massage}\n–î–∞—Ç–∞: ${data.date}\n–í—Ä–µ–º—è: ${data.time}\n–ú–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É ${data.phone} –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π`
            );

            await ctx.telegram.sendMessage(
                config.MASTER_TELEGRAM_ID,
                `üì¨ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\nüë§ –ö–ª–∏–µ–Ω—Ç: ${data.name}\nüíÜ‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∞: ${data.massage}\nüìÖ –î–∞—Ç–∞: ${data.date}\n‚è∞ –í—Ä–µ–º—è: ${data.time}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}`
            );
        } catch (e) {
            await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö üò¢");
        }
    }
});

export default bot;
