import { Telegraf, Markup } from "telegraf";
import { Message } from "telegraf/typings/core/types/typegram";
import { config } from "./config";

const bot = new Telegraf(config.BOT_TOKEN);

bot.start((ctx) => {
    ctx.reply(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Å—Å–∞–∂:",
        Markup.keyboard([
            Markup.button.webApp(
                "üóì –ó–∞–ø–∏—Å–∞—Ç—å—Å—è",
                "https://massagebook-web.vercel.app"
            ),
            Markup.button.text("üìã –ú–æ–∏ –∑–∞–ø–∏—Å–∏"),
        ])
            .resize()
            .oneTime()
    );
});

bot.on("message", async (ctx) => {
    const message = ctx.message as Message.WebAppDataMessage;

    if (message.web_app_data && message.web_app_data.data) {
        try {
            const data = JSON.parse(message.web_app_data.data);
            await ctx.reply(
                `${data.name}! –°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à –≤—ã–±–æ—Ä!\n–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞: ${data.massage}\n–î–∞—Ç–∞: ${data.date}\n–í—Ä–µ–º—è: ${data.time}\n–ú–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É ${data.phone} –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π`
            );

            await ctx.telegram.sendMessage(
                config.MASTER_TELEGRAM_ID,
                `üì¨ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑:\nüë§ –ö–ª–∏–µ–Ω—Ç: ${data.name}\nüíÜ‚Äç‚ôÇÔ∏è –£—Å–ª—É–≥–∞: ${data.massage}\nüìÖ –î–∞—Ç–∞: ${data.date}\n‚è∞ –í—Ä–µ–º—è: ${data.time}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}`
            );
        } catch (e) {
            await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö üò¢");
        }
    }
});

export default bot;
